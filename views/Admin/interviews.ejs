<% layout('./Layout/layout.ejs') -%>
    <% block('head').append(` <link href="/assets/vendor/datatables.net-bs5/css/dataTables.bootstrap5.min.css"
        rel="stylesheet" type="text/css" />
    <link href="/assets/vendor/datatables.net-responsive-bs5/css/responsive.bootstrap5.min.css" rel="stylesheet"
        type="text/css" />
    <link href="/assets/vendor/datatables.net-fixedcolumns-bs5/css/fixedColumns.bootstrap5.min.css" rel="stylesheet"
        type="text/css" />
    <link href="/assets/vendor/datatables.net-fixedheader-bs5/css/fixedHeader.bootstrap5.min.css" rel="stylesheet"
        type="text/css" />
    <link href="/assets/vendor/datatables.net-buttons-bs5/css/buttons.bootstrap5.min.css" rel="stylesheet"
        type="text/css" />
    <link href="/assets/vendor/datatables.net-select-bs5/css/select.bootstrap5.min.css" rel="stylesheet"
        type="text/css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    `) %>
    <div class="row">
        <div class="col-12">
            <div class="page-title-box justify-content-between d-flex align-items-md-center flex-md-row flex-column">
                <h4 class="page-title">
                    <%=pagetitle%>
                </h4>
                <ol class="breadcrumb m-0">
                    <li class="breadcrumb-item"><a href="/admin/dashboard">Dashboard</a></li>

                    <li class="breadcrumb-item active">Interview</li>
                </ol>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="card">
                <div class="card-body">
                
                    <div class="table-responsive">
                        <table class="table table-bordered table-striped table-vcenter js-dataTable-full"
                            id="datatable-buttons">
                            <thead>
                                <tr>
                                    <th class="text-center">#</th>

                                    <th>Fullname</th>
                                    <th>Application</th>
                                    <th>Interview Date</th>
                                    <th>Interview Time</th>
                                    <th>Status</th>

                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% users.forEach((record, index)=> { %>
                                    <tr>
                                        <td class="text-center fs-sm">
                                            <%= index + 1 %>
                                        </td>

                                        <td class="fw-semibold fs-sm d-flex align-items-center">
                                            <img src="/images/profile/<%= record.profile_url %>" class="img-avatar me-2"
                                                alt="" style="width: 40px; height: 40px;">
                                            <span>
                                                <%= record.lastname %>, <%= record.firstname %>
                                            </span>
                                        </td>
                                        <td class="fs-sm">
                                            <a target="_blank" href="/admin/applications/review/<%= record.application_id %>">Application #<%= record.application_id %></a>
                                        </td>
                                        <td class="fs-sm">
                                            <%= new Date(record.interview_date).toLocaleString('en-US', {
                                                year: 'numeric' , month: 'long' , day: 'numeric' }) %>

                                        </td>
                                        <td class="fs-sm">
                                            <%= new Date('1970-01-01T' + record.interview_time).toLocaleString('en-US',
                                                { hour: 'numeric' , minute: 'numeric' , second: 'numeric' , hour12: true
                                                }) %>
                                        </td>

                                        <td class="text-center">
                                            <% if (record.status==='Pending' ) { %>
                                                <span class="badge bg-warning">Pending</span>
                                                <% } else if (record.status==='Accepted' ) { %>
                                                    <span class="badge bg-success">Accepted</span>

                                                    <% } else if (record.status==='Rejected' ) { %>
                                                        <span class="badge bg-danger">Rejected</span>
                                                        <% } else if (record.status==='Completed' ) { %>
                                                            <span class="badge bg-primary">Completed</span>
                                                            <% } else if (record.status==='Cancelled' ) { %>
                                                                <span class="badge bg-danger">Cancelled</span>
                                                            <%}%>
                                        </td>
                                        <td class="text-center fs-sm">
                                            <div class="btn-group">
                                                <% if (record.status === 'Accepted') { %>
                                                    <button type="button" class="btn btn-sm btn-success"
                                                        onclick="markAsComplete('<%= record.id %>')"
                                                        data-bs-toggle="tooltip" aria-label="Mark as Complete"
                                                        data-bs-original-title="Mark as Complete">
                                                        <i class="fa fa-fw fa-check"></i>Complete
                                                    </button>
                                                    <button type="button" class="btn btn-sm btn-info"
        onclick="sendEmailNotification('<%= record.id %>', '<%= record.email %>','<%=record.firstname%>')"
        data-bs-toggle="tooltip" aria-label="Send Email Notification"
        data-bs-original-title="Send Email Notification">
    <i class="fa fa-fw fa-envelope"></i> Send Email
</button>
                                                    <button type="button" class="btn btn-sm btn-danger"
                                                        onclick="confirmCancel('<%= record.id %>')"
                                                        data-bs-toggle="tooltip" aria-label="Cancel Interview"
                                                        data-bs-original-title="Cancel Interview">
                                                        <i class="fa fa-fw fa-ban"></i>Cancel
                                                    </button>
                                                    
                                                <% } else if (record.status === 'Completed') { %>
                                                    <span class="fw-bold">For Evaluation</span>
                                                    <% } else if (record.status === 'Cancel') { %>
                                                        <span class="fw-bold">Cancelled</span>
                                                <% } else if (record.status === 'Pending') { %>
                                                    <!-- Accept Interview Button -->
                                                <button type="button"
                                                class="btn btn-sm btn-success js-bs-tooltip-enabled w-100"
                                                data-bs-toggle="tooltip" aria-label="Accept Interview"
                                                onclick="confirmAccept('<%= record.id %>')"
                                                data-bs-original-title="Accept Interview">
                                                <i class="fa fa-fw fa-check"></i>Accept
                                                </button>

                                                <!-- Reject Interview Button -->
                                                <button type="button"
                                                class="btn btn-sm btn-danger js-bs-tooltip-enabled w-100"
                                                data-bs-toggle="tooltip" aria-label="Reject Interview"
                                                onclick="confirmReject('<%= record.id %>')"
                                                data-bs-original-title="Reject Interview">
                                                <i class="fa fa-fw fa-times"></i>Reject
                                                </button>
                                                                                                <% } %>
                                            </div>
                                            

                                        </td>


                                    </tr>
                                    <%})%>


                            </tbody>
                        </table>
                    </div>

                </div>
            </div>
        </div>
    </div>

   

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        function sendEmailNotification(interviewId, email,firstname) {
    Swal.fire({
        title: 'Are you sure?',
        text: `Do you want to send an email notification to ${firstname} ?`,
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, send notification!',
        cancelButtonText: 'Cancel'
    }).then((result) => {
        if (result.isConfirmed) {
            // If confirmed, send email notification using Fetch API
            fetch(`/admin/send-email-notification`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ interviewId, email,firstname }) // Send the interview ID and email address in the request body
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Failed to send email notification.');
                }
                return response.json(); // Return JSON if successful
            })
            .then(data => {
                // Show success message for email notification
                Swal.fire({
                    title: 'Email Sent!',
                    text: data.message, // Message from server response regarding email
                    icon: 'success',
                    confirmButtonColor: '#3085d6',
                    confirmButtonText: 'Okay'
                }).then(() => {
                    location.reload(); // Refresh or update the UI here if necessary
                });
            })
            .catch(error => {
                Swal.fire({
                    title: 'Error!',
                    text: error.message || 'An error occurred while sending the email notification.',
                    icon: 'error',
                    confirmButtonColor: '#d33',
                    confirmButtonText: 'Okay'
                });
            });
        }
    });
}
        function markAsComplete(interviewId) {
            Swal.fire({
                title: 'Are you sure?',
                text: 'Do you want to mark this interview as complete?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, mark as complete!',
                cancelButtonText: 'Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    // If confirmed, submit the form using Fetch API
                    fetch(`/admin/mark-as-complete/${interviewId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                    })
                        .then(response => {
                            if (response.ok) {
                                return response.json(); // Return JSON if successful
                            } else {
                                throw new Error('Network response was not ok.');
                            }
                        })
                        .then(data => {
                            // Show success message
                            Swal.fire({
                                title: 'Success!',
                                text: data.message, // Message from server response
                                icon: 'success',
                                confirmButtonColor: '#3085d6',
                                confirmButtonText: 'Okay'
                            }).then(() => {
                                // Optionally, refresh or update the UI here
                                location.reload(); // This can be optional depending on how you want to manage the UI.
                            });
                        })
                        .catch(error => {
                            Swal.fire({
                                title: 'Error!',
                                text: 'An error occurred while marking the interview as complete.',
                                icon: 'error',
                                confirmButtonColor: '#d33',
                                confirmButtonText: 'Okay'
                            });
                        });
                }
            });
        }

        function confirmCancel(interviewId) {
    Swal.fire({
        title: 'Are you sure?',
        text: 'Do you want to cancel this interview?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#3085d6',
        confirmButtonText: 'Yes, cancel it!',
        cancelButtonText: 'No, keep it'
    }).then((result) => {
        if (result.isConfirmed) {
            // If confirmed, submit the form using Fetch API
            fetch(`/admin/cancel-interview/${interviewId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
            })
            .then(response => {
                if (response.ok) {
                    return response.json(); // Return JSON if successful
                } else {
                    throw new Error('Network response was not ok.');
                }
            })
            .then(data => {
                // Show success message
                Swal.fire({
                    title: 'Success!',
                    text: data.message, // Message from server response
                    icon: 'success',
                    confirmButtonColor: '#3085d6',
                    confirmButtonText: 'Okay'
                }).then(() => {
                    // Optionally, refresh or update the UI here
                    location.reload(); // This can be optional depending on how you want to manage the UI.
                });
            })
            .catch(error => {
                Swal.fire({
                    title: 'Error!',
                    text: 'An error occurred while cancelling the interview.',
                    icon: 'error',
                    confirmButtonColor: '#d33',
                    confirmButtonText: 'Okay'
                });
            });
        }
    });
}


    </script>
    <script>
        function confirmAccept(interviewId) {
            Swal.fire({
                title: 'Are you sure?',
                text: 'Do you want to accept this interview?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, accept it!',
                cancelButtonText: 'Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    // If confirmed, submit the form using Fetch API
                    fetch(`/admin/accept-interview/${interviewId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                    })
                    .then(response => {
                        if (response.ok) {
                            return response.json(); // Return JSON if successful
                        } else {
                            throw new Error('Network response was not ok.');
                        }
                    })
                    .then(data => {
                        // Show success message
                        Swal.fire({
                            title: 'Success!',
                            text: data.message, // Message from server response
                            icon: 'success',
                            confirmButtonColor: '#3085d6',
                            confirmButtonText: 'Okay'
                        }).then(() => {
                            // Optionally, refresh or update the UI here
                            location.reload(); // This can be optional depending on how you want to manage the UI.
                        });
                    })
                    .catch(error => {
                        Swal.fire({
                            title: 'Error!',
                            text: 'An error occurred while accepting the interview.',
                            icon: 'error',
                            confirmButtonColor: '#d33',
                            confirmButtonText: 'Okay'
                        });
                    });
                }
            });
        }
        
        
        function confirmReject(interviewId) {
            Swal.fire({
                title: 'Are you sure?',
                text: 'Do you want to reject this interview?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, reject it!',
                cancelButtonText: 'Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    // If confirmed, submit the form using Fetch API
                    fetch(`/admin/reject-interview/${interviewId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                    })
                    .then(response => {
                        if (response.ok) {
                            return response.json(); // Return JSON if successful
                        } else {
                            throw new Error('Network response was not ok.');
                        }
                    })
                    .then(data => {
                        // Show success message
                        Swal.fire({
                            title: 'Success!',
                            text: data.message, // Message from server response
                            icon: 'success',
                            confirmButtonColor: '#3085d6',
                            confirmButtonText: 'Okay'
                        }).then(() => {
                            // Optionally, refresh or update the UI here
                            location.reload(); // This can be optional depending on how you want to manage the UI.
                        });
                    })
                    .catch(error => {
                        Swal.fire({
                            title: 'Error!',
                            text: 'An error occurred while rejecting the interview.',
                            icon: 'error',
                            confirmButtonColor: '#d33',
                            confirmButtonText: 'Okay'
                        });
                    });
                }
            });
        }
        
        </script>


   

        <%block('script').append(`<script src="/assets/vendor/datatables.net/js/jquery.dataTables.min.js">
            </script>
            <script src="/assets/vendor/datatables.net-bs5/js/dataTables.bootstrap5.min.js"></script>
            <script src="/assets/vendor/datatables.net-responsive/js/dataTables.responsive.min.js"></script>
            <script src="/assets/vendor/datatables.net-responsive-bs5/js/responsive.bootstrap5.min.js"></script>
            <script src="/assets/vendor/datatables.net-fixedcolumns-bs5/js/fixedColumns.bootstrap5.min.js"></script>
            <script src="/assets/vendor/datatables.net-fixedheader/js/dataTables.fixedHeader.min.js"></script>
            <script src="/assets/vendor/datatables.net-buttons/js/dataTables.buttons.min.js"></script>
            <script src="/assets/vendor/datatables.net-buttons-bs5/js/buttons.bootstrap5.min.js"></script>
            <script src="/assets/vendor/datatables.net-buttons/js/buttons.html5.min.js"></script>
            <script src="/assets/vendor/datatables.net-buttons/js/buttons.flash.min.js"></script>
            <script src="/assets/vendor/datatables.net-buttons/js/buttons.print.min.js"></script>
            <script src="/assets/vendor/datatables.net-keytable/js/dataTables.keyTable.min.js"></script>
            <script src="/assets/vendor/datatables.net-select/js/dataTables.select.min.js"></script>

            <!-- Datatable Demo Aapp js -->
            <script src="/assets/js/pages/demo.datatable-init.js"></script>`)%>